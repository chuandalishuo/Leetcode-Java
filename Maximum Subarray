public class Solution {
    public int maxSubArray(int[] A) {
        if(A.length==0) return 0;
        int[] S = new int[A.length]; S[0]=A[0];
        int maxs = A[0];
        for(int i=1; i<A.length;i++){
            S[i] = (S[i-1]>0)? S[i-1]+A[i] : A[i];//动规
            maxs = Math.max(maxs, S[i]);//贪心
        }
        return maxs;
    }
}
//滚动变量local取代数组S[]将空间O(n)降到O(1)
public class Solution {
    public int maxSubArray(int[] A) {
        if(A.length==0) return 0;
        //int[] S = new int[A.length]; S[0]=A[0];
        int maxs = A[0],local = A[0];
        for(int i=1; i<A.length;i++){
            //S[i] = (S[i-1]>0)? S[i-1]+A[i] : A[i];
            //maxs = Math.max(maxs, S[i]);
            local = local>0? local+A[i] : A[i];
            maxs = Math.max(maxs, local);
        }
        return maxs;
    }
}
