/**
 * Definition for singly-linked list.
 * class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) {
 *         val = x;
 *         next = null;
 *     }
 * }
 */
public class Solution {
    public ListNode mergelists(ListNode l1, ListNode l2) {
        ListNode dumy = new ListNode(0);
        ListNode p=dumy, p1=l1, p2=l2;
        while(p1!=null && p2!=null){
            if(p1.val<p2.val){
                p.next = p1;
                p1 = p1.next;
            }
            else{
                p.next = p2;
                p2 = p2.next;
            }
            p=p.next;
        }
        if(p1!=null)p.next=p1;
        else if(p2!=null) p.next=p2;
        return dumy.next;
    }
    public ListNode mergesort(ListNode head) {
        if(head==null||head.next==null) return head;
        ListNode fast = head, slow = head;
        while(fast.next!=null && fast.next.next!=null){
            slow = slow.next;
            fast = fast.next.next;
        }
        ListNode head2 = mergesort(slow.next);
        slow.next=null;
        ListNode head1 = mergesort(head);
        return mergelists(head1,head2);
    }
    public ListNode sortList(ListNode head) {
        return mergesort(head);
    }
}
