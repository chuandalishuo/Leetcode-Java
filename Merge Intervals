/**
 * Definition for an interval.
 * public class Interval {
 *     int start;
 *     int end;
 *     Interval() { start = 0; end = 0; }
 *     Interval(int s, int e) { start = s; end = e; }
 * }
 */
public class Solution {
    public List<Interval> merge(List<Interval> intervals) {
        if(intervals.size()<=1) return intervals;
        Comparator<Interval> comp = new Comparator<Interval>(){//重写compare方法，使得Interval之间可比
            public int compare(Interval in1, Interval in2){
                if(in1.start == in2.start) return in1.end - in2.end;
                return in1.start - in2.start;
            }
        };
        Collections.sort(intervals, comp);//难点：排序intervals
        for(int i=1; i<intervals.size();){//线性时间in-place merge
            while(i>=1&&intervals.get(i-1).end>=intervals.get(i).start){//和之前的interval相交
                //start已经排序了，一定是i-1的靠前，但end不确定
                intervals.get(i-1).end = Math.max(intervals.get(i-1).end, intervals.get(i).end);
                intervals.remove(i);
                i--;
            }
            i++;
        }
        return intervals;
    }
}
