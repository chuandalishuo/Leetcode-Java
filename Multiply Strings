public class Solution {
    public String multiply(String num1, String num2) {
        num1 = new StringBuilder(num1).reverse().toString();
        num2 = new StringBuilder(num2).reverse().toString();
        int[] result = new int[num1.length()+num2.length()];
        Arrays.fill(result,0);
        
        for(int i=0; i<num1.length();i++){
            int n1 = num1.charAt(i)-'0';
            for(int j=0; j<num2.length();j++){
                int n2 = num2.charAt(j)-'0';
                result[i+j] = result[i+j] + n1*n2;
            }
        }
        
        StringBuilder mul = new StringBuilder();
        for(int i=0; i<result.length;i++){
            mul.insert(0,result[i]%10);
            int carry = result[i]/10;
            if(i<result.length-1)
            result[i+1] += carry;
        }
        
        while(mul.length()>0&&mul.charAt(0)=='0'){
            mul.deleteCharAt(0);
        }
        return mul.length()==0? "0":mul.toString();
    }
}
//更简洁，但更难懂 http://blog.csdn.net/linhuanmars/article/details/20967763
public String multiply(String num1, String num2) {  
    if(num1 == null || num2 == null || num1.length()==0 || num2.length()==0)  
        return "";  
    if(num1.charAt(0)=='0')  
        return "0";  
    if(num2.charAt(0)=='0')  
        return "0";  
    StringBuilder res = new StringBuilder();  
    int num = 0;  
    for(int i=num1.length()+num2.length();i>0;i--)  
    {  
        for(int j=Math.min(i-1,num1.length());j>0;j--)  
        {  
            if(i-j<=num2.length())  
            {  
                num += (int)(num1.charAt(j-1)-'0')*(int)(num2.charAt(i-1-j)-'0');  
            }  
        }  
        if(i!=1 || num>0)  
            res.append(num%10);  
        num = num/10;  
    }  
    return res.reverse().toString();  
}  
