/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) {
 *         val = x;
 *         next = null;
 *     }
 * }
 */
public class Solution {
    public ListNode mergeLists(ListNode l1, ListNode l2) {
        ListNode head = new ListNode(0);
        ListNode p=head, p1=l1, p2=l2;
        while(p1!=null && p2!=null){
            if(p1.val<p2.val){p.next = p1; p1 = p1.next;}
            else {p.next = p2; p2 = p2.next;}
            p = p.next;
        }
        if(p1!=null) p.next = p1;
        if(p2!=null) p.next = p2;
        return head.next;
    }
    public ListNode helper(List<ListNode> lists, int l, int r){
        if(l>r) return null;
        if(l==r) return lists.get(l);
        int m = (l+r)/2;
        ListNode l1 = helper(lists, l, m);
        ListNode l2 = helper(lists, m+1, r);
        return mergeLists(l1,l2);
    }
    public ListNode mergeKLists(List<ListNode> lists) {
        return helper(lists, 0, lists.size()-1);//二分法merge lists
    }
}
