public class Solution {
    public int cnt;
    public boolean isValid(int row, int col, int n, int[] queenlist){
        for(int i=0; i<row; i++){
            if(queenlist[i]==col) return false;
            if(queenlist[i]-col == row-i) return false;
            if(queenlist[i]-col == i-row) return false;
        }
        return true;
    }
    public void dfs(int row, int n, int[] queenlist){
        if(row == n){
            cnt++;
            return;
        }
        for(int i=0; i<n; i++){
            if(isValid(row,i,n,queenlist)){
                queenlist[row] = i;
                dfs(row+1, n, queenlist);
            }
        }
    }
    public int totalNQueens(int n) {
        int[] queenlist = new int[n];
        cnt = 0;
        dfs(0,n,queenlist);
        return cnt;
    }
}
