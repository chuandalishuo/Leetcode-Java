public class Solution {
    public int longestValidParentheses(String s) {
        Stack<Integer> stack = new Stack<Integer>();
        int maxlen = 0;
        for(int i=0; i<s.length(); i++){
            if(!stack.empty() && ((s.charAt(stack.peek())=='('&&s.charAt(i)==')')||(s.charAt(stack.peek())=='('&&s.charAt(i)==')')||(s.charAt(stack.peek())=='('&&s.charAt(i)==')') )){
                stack.pop();
                int len = i - (stack.empty()?-1:stack.peek());
                maxlen = Math.max(maxlen, len);
            }
            else{
                stack.push(i);
            }
        }
        int len = s.length() - (stack.empty()?0:stack.peek()+1);
        maxlen = Math.max(maxlen, len);
        return maxlen;
    }
}
